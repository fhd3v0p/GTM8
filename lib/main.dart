import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart';
import 'screens/splash_screen.dart';
import 'screens/giveaway_casino_screen.dart'; // FORCE: Ensure casino screen is included
import 'screens/giveaway_screen.dart';
import 'services/telegram_webapp_service.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'config/api_config.dart';

// FORCE: –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è –∫–∞–∑–∏–Ω–æ —Å–∫—Ä–∏–Ω–∞ –≤ production –±–∏–ª–¥
final GiveawayCasinoScreen globalCasinoScreen = GiveawayCasinoScreen();

Future<void> main() async {
  print('üöÄ GTM App Starting...');
  print('üîç Platform: ${kIsWeb ? 'Web' : 'Mobile'}');
  print('üîç Debug mode: ${kDebugMode}');
  
  WidgetsFlutterBinding.ensureInitialized();
  print('‚úÖ Flutter binding initialized');
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞
  print('üîç Loading .env file...');
  try {
    await dotenv.load(fileName: ".env");
    print('‚úÖ .env file loaded successfully');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    print('üîç Checking loaded environment variables:');
    print('  SUPABASE_URL: ${dotenv.env['SUPABASE_URL']?.isNotEmpty == true ? "‚úÖ loaded" : "‚ùå empty"}');
    print('  SUPABASE_ANON_KEY: ${dotenv.env['SUPABASE_ANON_KEY']?.isNotEmpty == true ? "‚úÖ loaded" : "‚ùå empty"}');
    print('  RATING_API_BASE_URL: ${dotenv.env['RATING_API_BASE_URL']?.isNotEmpty == true ? "‚úÖ loaded" : "‚ùå empty"}');
    
  } catch (e) {
    print('‚ö†Ô∏è Failed to load .env file: $e');
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ .env —Ñ–∞–π–ª–∞
  }
  
  print('üîç Loading environment variables...');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
  try {
    print('üîç Environment Variables Status:');
    print('  SUPABASE_URL: ${ApiConfig.supabaseUrl.isNotEmpty ? "‚úÖ found (${ApiConfig.supabaseUrl.substring(0, 20)}...)" : "‚ùå missing"}');
    print('  SUPABASE_ANON_KEY: ${ApiConfig.supabaseAnonKey.isNotEmpty ? "‚úÖ found (${ApiConfig.supabaseAnonKey.substring(0, 10)}...)" : "‚ùå missing"}');
    print('  RATING_API_BASE_URL: ${ApiConfig.ratingApiBaseUrl.isNotEmpty ? "‚úÖ found (${ApiConfig.ratingApiBaseUrl})" : "‚ùå missing"}');
    print('  TELEGRAM_BOT_TOKEN: ${ApiConfig.telegramBotToken.isNotEmpty ? "‚úÖ found" : "‚ùå missing"}');
    
    if (ApiConfig.isConfigured) {
      await Supabase.initialize(
        url: ApiConfig.supabaseUrl,
        anonKey: ApiConfig.supabaseAnonKey,
      );
      print('‚úÖ Supabase initialized successfully');
    } else {
      print('‚ö†Ô∏è Supabase credentials not found, skipping initialization');
      print('SUPABASE_URL: ${ApiConfig.supabaseUrl.isNotEmpty ? "found" : "missing"}');
      print('SUPABASE_ANON_KEY: ${ApiConfig.supabaseAnonKey.isNotEmpty ? "found" : "missing"}');
    }
  } catch (e) {
    print('‚ùå Failed to initialize Supabase: $e');
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–µ–∑ Supabase
  }

  // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
  try {
    TelegramWebAppService.initializeWebApp();
    TelegramWebAppService.disableVerticalSwipe();
    print('‚úÖ Telegram WebApp initialized successfully');
  } catch (e) {
    print('‚ö†Ô∏è Failed to initialize Telegram WebApp: $e');
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ WebApp —Ñ—É–Ω–∫—Ü–∏–π
  }

  // FORCE: Ensure casino screen is compiled into build
  print('üé∞ Casino screen type: ${GiveawayCasinoScreen}');
  
  // FORCE: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∑–∏–Ω–æ —Å–∫—Ä–∏–Ω —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –≤–∫–ª—é—á–µ–Ω –≤ production –±–∏–ª–¥
  final casinoScreen = GiveawayCasinoScreen;
  print('üé∞ Casino screen forced usage: $casinoScreen');
  
  // FORCE: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –≤–∫–ª—é—á–µ–Ω–∏—è –≤ production –±–∏–ª–¥
  print('üé∞ Global casino screen: $globalCasinoScreen');
  
  // FORCE: –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –±–∏–ª–¥
  final testCasino = GiveawayCasinoScreen();
  print('üé∞ Test casino instance: $testCasino');

  print('üöÄ Starting Flutter app...');
  
  // FORCE: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–∑–∏–Ω–æ —Å–∫—Ä–∏–Ω–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –±–∏–ª–¥
  final forcedCasino = GiveawayCasinoScreen();
  print('üé∞ Forced casino instance created: $forcedCasino');
  
  // FORCE: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∑–∏–Ω–æ —Å–∫—Ä–∏–Ω —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –≤–∫–ª—é—á–µ–Ω –≤ production –±–∏–ª–¥
  if (forcedCasino.runtimeType == GiveawayCasinoScreen) {
    print('üé∞ Casino screen type verified: ${forcedCasino.runtimeType}');
  }
  
  // FORCE: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –∫–∞–∑–∏–Ω–æ —Å–∫—Ä–∏–Ω–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –±–∏–ª–¥
  final casinoState = forcedCasino.createState();
  print('üé∞ Casino state created: $casinoState');
  
  runApp(const MyApp());
  print('‚úÖ Flutter app started successfully');
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    print('üèóÔ∏è Building MaterialApp...');
    
    // FORCE: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–∑–∏–Ω–æ —Å–∫—Ä–∏–Ω–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –±–∏–ª–¥
    final forcedCasinoInApp = GiveawayCasinoScreen();
    print('üé∞ Forced casino instance in MyApp: $forcedCasinoInApp');
    
    return MaterialApp(
      title: 'Gotham\'s Top Model',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        fontFamily: 'OpenSans',
        scaffoldBackgroundColor: const Color(0xFFE3C8F1),
        iconTheme: const IconThemeData(color: Color(0xFFFF6EC7)),
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: Color(0xFFFF6EC7),
            foregroundColor: Colors.white,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(18),
            ),
          ),
        ),
      ),
            // FORCE: Add routes to ensure casino screen is included
      routes: {
        '/': (context) => const SplashScreen(),
        '/giveaway': (context) => const GiveawayScreen(),
        '/casino': (context) => const GiveawayCasinoScreen(),
        '/giveaway_casino': (context) => const GiveawayCasinoScreen(),
        '/casino_screen': (context) => const GiveawayCasinoScreen(),
        // FORCE: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –±–∏–ª–¥
        '/force_casino': (context) => const GiveawayCasinoScreen(),
      },
      home: const SplashScreen(), // –í–µ—Ä–Ω—É–ª–∏ –∫–∞–∫ –±—ã–ª–æ
      // home: const SplashScreen(),
      // FORCE: –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∑–∏–Ω–æ —Å–∫—Ä–∏–Ω –∫–∞–∫ home –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è –≤ production –±–∏–ª–¥
      // home: const GiveawayCasinoScreen(),
    );
  }
}


