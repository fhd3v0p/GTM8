server {
    listen ${PORT:-8080};
    server_name _;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Critical files - no cache
    location = /index.html {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    location = /flutter_service_worker.js {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    location = /version.json {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    location = /main.dart.js {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    location = /flutter.js {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    location = /flutter_bootstrap.js {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    location = /assets/AssetManifest.json {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    location = /assets/FontManifest.json {
        add_header Cache-Control "no-store, must-revalidate";
        expires -1;
    }
    
    # Handle Flutter web routing
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        add_header X-Telegram-Mini-App-Version "1.0" always;
        add_header X-Telegram-Mini-App-Cache-Control "no-cache" always;
    }
    
    # Long-lived static assets
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|otf)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check for Railway
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}